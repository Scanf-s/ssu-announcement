name: scraper_workflow.yml
on:
  push:
    branches: [ "scraper" ]

jobs:
  build:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ap-northeast-2

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Build and Push to ECR
        run: |
          docker build -f scraper/Dockerfile -t ${{ secrets.ECR_REPOSITORY }}:scraper-${{ github.sha }} ./scraper
          docker tag ${{ secrets.ECR_REPOSITORY }}:scraper-${{ github.sha }} ${{ secrets.ECR_REPOSITORY }}:scraper-latest
          docker push ${{ secrets.ECR_REPOSITORY }}:scraper-${{ github.sha }}
          docker push ${{ secrets.ECR_REPOSITORY }}:scraper-latest

  deploy:
    name: Deploy to lambda
    runs-on: ubuntu-latest
    needs: build

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ap-northeast-2

      - name: Deploy docker image to lambda
        run: |
            aws lambda update-function-code \
            --function-name ${{ secrets.SCRAPER_LAMBDA_FUNCTION_NAME }} \
            --image-uri ${{ secrets.ECR_REPOSITORY }}:scraper-${{ github.sha }}